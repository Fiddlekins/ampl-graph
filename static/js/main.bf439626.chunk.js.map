{"version":3,"sources":["App.module.css","Graph.module.css","getAmplData.js","amplDataFount.js","Graph.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","dayMs","client","ApolloClient","uri","cache","InMemoryCache","GET_REBASES","gql","getTotalSupplyData","a","data","ids","Set","first","iterate","lastEpoch","query","variables","rebasesResponse","rebases","length","parseInt","epoch","rebase","has","id","push","add","map","supply","totalSupply","parseFloat","getMarketData","fetch","res","json","getAmplData","Promise","all","totalSupplyData","marketData","market_caps","prices","total_volumes","aggregatedData","timestamp","value","market_cap","price","total_volume","sortedTimestamps","Object","keys","key","sort","b","timestampStart","index","marketCap","totalVolume","daysSinceStart","ampleDataFount","this","_handlers","_boundPollData","_pollData","bind","eventName","handler","context","eventHandler","delete","args","call","emit","setTimeout","Graph","amplData","x","y","z","days","type","mode","marker","color","colorscale","size","text","layout","autosize","title","scene","aspectratio","xaxis","yaxis","autorange","zaxis","useResizeHandler","className","styles","plot","App","useState","setAmplData","useEffect","onData","amplDataFount","on","off","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf439626.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__Wr7YK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"plot\":\"Graph_plot__3vXLE\"};","import {ApolloClient, gql, InMemoryCache} from '@apollo/client';\r\n\r\nconst dayMs = 1000 * 60 * 60 * 24;\r\nexport const client = new ApolloClient({\r\n\turi: 'https://api.thegraph.com/subgraphs/name/aalavandhan/ampleforth',\r\n\tcache: new InMemoryCache(),\r\n});\r\n\r\nexport const GET_REBASES = gql`\r\n  query getRebases($first: Int, $lastEpoch: BigInt!) {\r\n    rebases(first: $first, orderBy: epoch, where: { epoch_gte: $lastEpoch }) {\r\n      id,\r\n      supply,\r\n      epoch\r\n    }\r\n  }\r\n`;\r\n\r\nasync function getTotalSupplyData() {\r\n\tconst data = [];\r\n\tconst ids = new Set();\r\n\tconst first = 1000;\r\n\tlet iterate = true;\r\n\tlet lastEpoch = 0;\r\n\twhile (iterate) {\r\n\t\tconst rebasesResponse = await client.query({\r\n\t\t\tquery: GET_REBASES,\r\n\t\t\tvariables: {\r\n\t\t\t\tfirst,\r\n\t\t\t\tlastEpoch\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst {rebases} = rebasesResponse.data;\r\n\t\titerate = rebases.length >= first;\r\n\t\tlastEpoch = parseInt(rebases[rebases.length - 1].epoch, 10);\r\n\t\tfor (const rebase of rebases) {\r\n\t\t\tif (!ids.has(rebase.id)) {\r\n\t\t\t\tdata.push(rebase);\r\n\t\t\t\tids.add(rebase.id);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn data.map(({supply, epoch}) => {\r\n\t\treturn {\r\n\t\t\tepoch: parseInt(epoch, 10),\r\n\t\t\ttotalSupply: parseFloat(supply)\r\n\t\t};\r\n\t});\r\n}\r\n\r\nasync function getMarketData() {\r\n\tconst res = await fetch(`https://api.coingecko.com/api/v3/coins/ampleforth/market_chart?vs_currency=usd&days=max`);\r\n\treturn res.json();\r\n}\r\n\r\nexport default async function getAmplData() {\r\n\tconst [totalSupplyData, marketData] = await Promise.all([\r\n\t\tgetTotalSupplyData(),\r\n\t\tgetMarketData()\r\n\t]);\r\n\tconst {market_caps, prices, total_volumes} = marketData;\r\n\tconst aggregatedData = {};\r\n\tfor (const [timestamp, value] of market_caps) {\r\n\t\tif (!aggregatedData[timestamp]) {\r\n\t\t\taggregatedData[timestamp] = {timestamp};\r\n\t\t}\r\n\t\taggregatedData[timestamp].market_cap = value;\r\n\t}\r\n\tfor (const [timestamp, value] of prices) {\r\n\t\tif (!aggregatedData[timestamp]) {\r\n\t\t\taggregatedData[timestamp] = {timestamp};\r\n\t\t}\r\n\t\taggregatedData[timestamp].price = value;\r\n\t}\r\n\tfor (const [timestamp, value] of total_volumes) {\r\n\t\tif (!aggregatedData[timestamp]) {\r\n\t\t\taggregatedData[timestamp] = {timestamp};\r\n\t\t}\r\n\t\taggregatedData[timestamp].total_volume = value;\r\n\t}\r\n\tconst sortedTimestamps = Object.keys(aggregatedData).map(key => parseInt(key, 10)).sort((a, b) => a - b);\r\n\tconst timestampStart = sortedTimestamps[0];\r\n\treturn sortedTimestamps.map((timestamp, index) => {\r\n\t\tconst {market_cap, price, total_volume} = aggregatedData[timestamp];\r\n\t\t// Reuse previous day's supply during the period between coingecko updating and rebase happening\r\n\t\tconst {totalSupply} = totalSupplyData[index] || totalSupplyData[index - 1];\r\n\t\tconst daysSinceStart = (timestamp - timestampStart) / dayMs;\r\n\t\treturn {\r\n\t\t\tmarketCap: market_cap,\r\n\t\t\tprice,\r\n\t\t\ttotalVolume: total_volume,\r\n\t\t\ttotalSupply,\r\n\t\t\tdaysSinceStart\r\n\t\t};\r\n\t});\r\n}\r\n","import getAmplData from './getAmplData.js';\r\n\r\nconst pollRate = 1000 * 60 * 60;\r\n\r\nclass AmplDataFount {\r\n\tconstructor() {\r\n\t\tthis._handlers = {};\r\n\t\tthis._boundPollData = this._pollData.bind(this);\r\n\t\tthis._pollData();\r\n\t}\r\n\r\n\ton(eventName, handler, context) {\r\n\t\tif (!this._handlers[eventName]) {\r\n\t\t\tthis._handlers[eventName] = new Set();\r\n\t\t}\r\n\t\tthis._handlers[eventName].add({handler, context});\r\n\t}\r\n\r\n\toff(eventName, handler, context = null) {\r\n\t\tif (!this._handlers[eventName]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfor (const eventHandler of this._handlers[eventName]) {\r\n\t\t\tif (eventHandler.handler === handler && (!context || eventHandler.context === context)) {\r\n\t\t\t\tthis._handlers[eventName].delete(eventHandler);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\temit(eventName, ...args) {\r\n\t\tif (!this._handlers[eventName]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tfor (const {handler, context} of this._handlers[eventName]) {\r\n\t\t\tif (context) {\r\n\t\t\t\thandler.call(context, ...args);\r\n\t\t\t} else {\r\n\t\t\t\thandler(...args);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync _pollData() {\r\n\t\tconst data = await getAmplData();\r\n\t\tthis.emit('data', data);\r\n\t\tsetTimeout(this._boundPollData, pollRate);\r\n\t}\r\n}\r\n\r\nconst ampleDataFount = new AmplDataFount();\r\n\r\nexport default ampleDataFount;\r\n","import Plot from 'react-plotly.js';\r\nimport styles from './Graph.module.css';\r\n\r\nexport default function Graph({amplData}) {\r\n\tconst x = amplData.map(({price}) => price);\r\n\tconst y = amplData.map(({totalSupply}) => totalSupply);\r\n\tconst z = amplData.map(({totalVolume}) => totalVolume);\r\n\tconst days = amplData.map(({daysSinceStart}) => daysSinceStart);\r\n\tconst data = [\r\n\t\t{\r\n\t\t\tx,\r\n\t\t\ty,\r\n\t\t\tz,\r\n\t\t\ttype: 'scatter3d',\r\n\t\t\tmode: 'lines+markers',\r\n\t\t\tmarker: {\r\n\t\t\t\tcolor: days,\r\n\t\t\t\tcolorscale: 'Rainbow',\r\n\t\t\t\tsize: 3\r\n\t\t\t},\r\n\t\t\ttext: days.map(value => `Day ${value}`)\r\n\t\t}\r\n\t];\r\n\tconst layout = {\r\n\t\tautosize: true,\r\n\t\ttitle: 'AMPL historical data',\r\n\t\tscene: {\r\n\t\t\taspectratio: {\r\n\t\t\t\tx: 1,\r\n\t\t\t\ty: 1,\r\n\t\t\t\tz: 1\r\n\t\t\t},\r\n\t\t\txaxis: {\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: 'Price'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tyaxis: {\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: 'Total Supply'\r\n\t\t\t\t},\r\n\t\t\t\ttype: 'log',\r\n\t\t\t\tautorange: true\r\n\t\t\t},\r\n\t\t\tzaxis: {\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: 'Total Volume'\r\n\t\t\t\t},\r\n\t\t\t\ttype: 'log',\r\n\t\t\t\tautorange: true\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<Plot data={data} layout={layout} useResizeHandler={true} className={styles.plot}/>\r\n\t);\r\n}\r\n","import {useEffect, useState} from 'react';\nimport amplDataFount from './amplDataFount.js';\nimport styles from './App.module.css';\nimport Graph from './Graph.js';\n\nfunction App() {\n\tconst [amplData, setAmplData] = useState([]);\n\tuseEffect(() => {\n\t\tconst onData = (data) => {\n\t\t\tsetAmplData(data);\n\t\t}\n\t\tamplDataFount.on('data', onData);\n\t\treturn () => {\n\t\t\tamplDataFount.off('data', onData);\n\t\t}\n\t})\n\treturn (\n\t\t<div className={styles.app}>\n\t\t\t<Graph amplData={amplData}/>\n\t\t</div>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}